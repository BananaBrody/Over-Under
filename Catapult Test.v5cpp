{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor CatapultMotorA = motor(PORT5, ratio36_1, false);\nmotor CatapultMotorB = motor(PORT6, ratio36_1, true);\nmotor_group Catapult = motor_group(CatapultMotorA, CatapultMotorB);\n\ncontroller Controller1 = controller(primary);\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\nevent LaunchFlyWheel = event();\n\nvoid TriggerLaunch(){\n  CatapultMotorA.spinFor(forward, 180, degrees, false);\n  CatapultMotorB.spinFor(forward, 180, degrees);\n}\n\nint main() {\n  LaunchFlyWheel(TriggerLaunch);\n  CatapultMotorA.setMaxTorque(100, percent);\n  CatapultMotorB.setMaxTorque(100, percent);\n  CatapultMotorA.setVelocity(100,percent);\n  CatapultMotorB.setVelocity(100,percent);\n\n  wait(1,seconds);\n\n  CatapultMotorA.spinFor(forward, 180, degrees, false);\n  CatapultMotorB.spinFor(forward, 180, degrees);\n  while (true) {\n    if(Controller1.ButtonA.pressing() == true){\n      LaunchFlyWheel.broadcastAndWait();\n    }\n  }\n}\n\n\n","textLanguage":"cpp","rconfig":[{"port":[5,6],"name":"Catapult","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.2","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}